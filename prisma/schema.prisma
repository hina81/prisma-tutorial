// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model OrderItem {
  id           Int      @id @default(autoincrement())
  customer     Customer @relation(fields: [customerId], references: [id])
  customerId   Int
  item         Item     @relation(fields: [itemId], references: [id])
  itemId       Int
  price        Int
  orderedAt    DateTime
  deliveredAt  DateTime?
  cancelledAt  DateTime?
  options      OrderItemOption[]
}

model OrderItemOption {
  id         Int       @id @default(autoincrement())
  orderItem  OrderItem @relation(fields: [orderItemId], references: [id])
  orderItemId Int
  option     Option    @relation(fields: [optionId], references: [id])
  optionId   Int
}

model Customer {
  id          Int       @id @default(autoincrement())
  table       Table     @relation(fields: [tableId], references: [id])
  tableId     Int
  checkedInAt  DateTime
  checkedOutAt DateTime?
  orders      OrderItem[]
}

model Table {
  id        Int      @id @default(autoincrement())
  tableName String
  customers Customer[]
}



model Item {
  id             Int      @id @default(autoincrement())
  category       ItemCategory @relation(fields: [itemCategoryId], references: [id])
  itemCategoryId Int
  name           String
  thumbnailUrl   String
  price          Int
  isAvailable    Boolean
  orders         OrderItem[]
  availableOptionCategories AvailableOptionCategory[]
}

model ItemCategory {
  id    Int      @id @default(autoincrement())
  name  String
  items Item[]
}

model Option {
  id                Int      @id @default(autoincrement())
  category          OptionCategory @relation(fields: [optionCategoryId], references: [id])
  optionCategoryId  Int
  name              String
  price             Int
  defaultSelect     Boolean
  orderItemOptions  OrderItemOption[]
}

model AvailableOptionCategory {
  id             Int      @id @default(autoincrement())
  item           Item @relation(fields: [itemId], references: [id])
  itemId         Int
  optionCategory OptionCategory @relation(fields: [optionCategoryId], references: [id])
  optionCategoryId Int
}

model OptionCategory {
  id              Int      @id @default(autoincrement())
  name            String
  multiSelectable Boolean
  options         Option[]
  availableOptionCategories AvailableOptionCategory[]
}