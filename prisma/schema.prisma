// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model OrderItem {
  id           String   @id @default(uuid())
  customer     Customer @relation(fields: [customerId], references: [id])
  customerId   String
  item         Item     @relation(fields: [itemId], references: [id])
  itemId       String
  price        Int
  orderedAt    DateTime
  deliveredAt  DateTime?
  cancelledAt  DateTime?
  options      OrderItemOption[]
}

model OrderItemOption {
  id         String    @id @default(uuid())
  orderItem  OrderItem @relation(fields: [orderItemId], references: [id])
  orderItemId String
  option     Option    @relation(fields: [optionId], references: [id])
  optionId   String
}

model Customer {
  id          String    @id @default(uuid())
  table       Table     @relation(fields: [tableId], references: [id])
  tableId     String
  checkedInAt  DateTime
  checkedOutAt DateTime?
  orders      OrderItem[]
}

model Table {
  id        String     @id @default(uuid())
  tableName String
  customers Customer[]
}



model Item {
  id            String     @id @default(uuid())
  category      ItemCategory @relation(fields: [itemCategoryId], references: [id])
  itemCategoryId String
  name          String
  thumbnailUrl  String
  price         Int
  isAvailable   Boolean
  orders        OrderItem[]
  availableOptionCategories AvailableOptionCategory[]
}

model ItemCategory {
  id    String @id @default(uuid())
  name  String
  items Item[]
}

model Option {
  id                String @id @default(uuid())
  category          OptionCategory @relation(fields: [optionCategoryId], references: [id])
  optionCategoryId  String
  name             String
  price            Int
  defaultSelect    Boolean
  orderItemOptions OrderItemOption[]
}

model AvailableOptionCategory {
  id               String @id @default(uuid())
  item            Item @relation(fields: [itemId], references: [id])
  itemId         String
  optionCategory OptionCategory @relation(fields: [optionCategoryId], references: [id])
  optionCategoryId String
}

model OptionCategory {
  id              String @id @default(uuid())
  name            String
  multiSelectable Boolean
  options         Option[]
  availableOptionCategories AvailableOptionCategory[]
}